{"version":3,"sources":["App.tsx","serviceWorker.ts","index.tsx"],"names":["SERVER_URL","window","location","port","protocol","host","NewItemRecord","record","useState","showStockFlg","setShowStockFlg","stockText","setStockText","sampleText","setSampleText","useEffect","a","fetch","item_url","result","ok","json","result2","stock","length","map","r","name","info","join","sample","refresh","className","href","target","rel","price","src","image_url","width","height","alt","onClick","colSpan","ResultNewView","newItemList","nameFilter","setNameFilter","sortKey","setSortKey","sortDescFlg","setSortDescFlg","htmlFor","type","id","placeholder","value","onChange","e","currentTarget","temp","filter","includes","sort","b","reverse","createItemList","index","key","UsedItemRecord","shop_name","rank","fancy_box_flg","item_status","accessories","stockout","compensation","usedItemInfo","setUsedItemInfo","status_list","split","accessories_list","stockout_list","ResultUsedView","usedItemList","itemLabel","label","onClickItemLabel","ResultView","showMode","App","searchWord","setSearchWord","setNewItemList","setUsedItemList","setShowMode","loadIngFlg","setLoadingFlg","then","res","body","readOnly","disabled","role","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.6a1cf867.chunk.js","sourcesContent":["import React, { useState, FormEvent, useEffect } from 'react';\n\nconst SERVER_URL = window.location.port === '3000'\n  ? 'http://localhost:5000'\n  : window.location.protocol + '//' + window.location.host;\n\nconst THUMBNAIL_SIZE = 60;\n\ninterface NewItem {\n  price: number;\n  name: string;\n  item_url: string;\n  image_url: string;\n}\n\ninterface UsedItem {\n  price: number;\n  name: string;\n  rank: string;\n  shop_name: string;\n  item_url: string;\n  image_url: string;\n}\n\ninterface UsedItemInfo {\n  shop_name: string,      // 置いてあるお店の名前\n  rank: string,           // ランク(未開封品～ジャンク)\n  fancy_box_flg: boolean, // 外箱の有無\n  item_status: string,    // 商品状態\n  accessories: string,    // 付属内容\n  stockout: string,       // 欠品内容\n  compensation: string    // 補償\n}\n\ntype ShowMode = 'New' | 'Used';\n\nconst NewItemRecord: React.FC<{ record: NewItem }> = ({ record }) => {\n  const [showStockFlg, setShowStockFlg] = useState(false);\n  const [stockText, setStockText] = useState('取得中...');\n  const [sampleText, setSampleText] = useState('取得中...');\n\n  useEffect(() => {\n    const refresh = async () => {\n      const result = await fetch(`${SERVER_URL}/get_stock_data?item_url=${record.item_url}`);\n      if (result.ok) {\n        const result2: {\n          stock: { name: string, info: string }[],\n          sample: string[]\n        } = await result.json();\n        if (result2.stock.length === 0) {\n          setStockText('なし');\n        } else {\n          setStockText(result2.stock.map(r => `${r.name}(${r.info})`).join('、'));\n        }\n        if (result2.sample.length === 0) {\n          setSampleText('なし');\n        } else {\n          setSampleText('' + result2.sample.join('、'));\n        }\n      } else {\n        setStockText('不明');\n        setSampleText('不明');\n      }\n    };\n    if (showStockFlg) {\n      refresh();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [showStockFlg]);\n\n  return (<>\n    <tr>\n      <td className=\"align-middle\"><a href={record.item_url} target=\"_blank\" rel=\"noopener noreferrer\">{record.name}</a></td>\n      <td className=\"align-middle\">{record.price}</td>\n      <td className=\"align-middle\"><img src={record.image_url} width={THUMBNAIL_SIZE} height={THUMBNAIL_SIZE} alt={record.name} /></td>\n      <td className=\"align-middle text-center\"><button className=\"btn btn-primary\"\n        onClick={() => setShowStockFlg(!showStockFlg)}>在庫</button></td>\n    </tr>\n    {showStockFlg\n      ? <tr>\n        <td className=\"align-middle\" colSpan={4}>\n          <ul className=\"my-0\">\n            <li><strong>在庫：</strong>{stockText}</li>\n            <li><strong>試聴機：</strong>{sampleText}</li>\n          </ul>\n        </td>\n      </tr>\n      : <></>}\n  </>);\n};\n\nconst ResultNewView: React.FC<{\n  newItemList: NewItem[]\n}> = ({ newItemList }) => {\n  const [nameFilter, setNameFilter] = useState('');\n  const [sortKey, setSortKey] = useState('');\n  const [sortDescFlg, setSortDescFlg] = useState(false);\n\n  const onChangeMameFilter = (e: FormEvent<HTMLInputElement>) => {\n    setNameFilter(e.currentTarget.value);\n  };\n\n  const createItemList = () => {\n    let temp = newItemList\n      .filter(record => nameFilter !== '' ? record.name.includes(nameFilter) : true);\n    switch (sortKey) {\n      case '商品名':\n        temp = temp.sort((a, b) => a.name > b.name ? 1 : a.name < b.name ? -1 : 0);\n        break;\n      case '価格':\n        temp = temp.sort((a, b) => a.price > b.price ? 1 : a.price < b.price ? -1 : 0);\n        break;\n    }\n    if (sortDescFlg) {\n      temp = temp.reverse();\n    }\n    return temp;\n  };\n\n  const itemNameLabel = () => {\n    if (sortKey !== '商品名') {\n      return '商品名';\n    }\n    return '商品名' + (sortDescFlg ? '↓' : '↑');\n  }\n\n  const itemPriceLabel = () => {\n    if (sortKey !== '価格') {\n      return '価格';\n    }\n    return '価格' + (sortDescFlg ? '↓' : '↑');\n  }\n\n  const onClickItemNameLabel = () => {\n    if (sortKey !== '商品名') {\n      setSortKey('商品名');\n      setSortDescFlg(false);\n    } else {\n      if (!sortDescFlg) {\n        setSortDescFlg(true);\n      } else {\n        setSortKey('');\n      }\n    }\n  };\n\n  const onClickItemPriceLabel = () => {\n    if (sortKey !== '価格') {\n      setSortKey('価格');\n      setSortDescFlg(false);\n    } else {\n      if (!sortDescFlg) {\n        setSortDescFlg(true);\n      } else {\n        setSortKey('');\n      }\n    }\n  };\n\n  return (<>\n    <div className=\"row mt-3 justify-content-center\">\n      <div className=\"col-12 col-md-10\">\n        <form>\n          <div className=\"form-group d-flex my-0\">\n            <label className=\"text-nowrap mr-3 mt-2\" htmlFor=\"filterWord\">名前フィルタ</label>\n            <input type=\"text\" id=\"filterWord\" className=\"form-control\"\n              placeholder=\"入力したワードを含むもののみ表示\"\n              value={nameFilter} onChange={onChangeMameFilter} />\n          </div>\n        </form>\n      </div>\n    </div>\n    <div className=\"row mt-3 justify-content-center\">\n      <div className=\"col-12 col-md-10\">\n        <table className=\"border table table-striped table-nowrap table-bordered table-sm\">\n          <thead>\n            <tr>\n              <th className=\"text-nowrap\" onClick={onClickItemNameLabel}>{itemNameLabel()}</th>\n              <th className=\"text-nowrap\" onClick={onClickItemPriceLabel}>{itemPriceLabel()}</th>\n              <th className=\"text-nowrap\">画像</th>\n              <th className=\"text-nowrap\">詳細</th>\n            </tr>\n          </thead>\n          <tbody>\n            {createItemList().map((record, index) => {\n              return <NewItemRecord record={record} key={index} />;\n            })}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  </>);\n}\n\nconst UsedItemRecord: React.FC<{ record: UsedItem }> = ({ record }) => {\n  const [showStockFlg, setShowStockFlg] = useState(false);\n  const [usedItemInfo, setUsedItemInfo] = useState<UsedItemInfo>({\n    shop_name: '取得中...',\n    rank: '取得中...',\n    fancy_box_flg: false,\n    item_status: '取得中...',\n    accessories: '取得中...',\n    stockout: '取得中...',\n    compensation: '取得中...'\n  });\n\n  useEffect(() => {\n    const refresh = async () => {\n      const result = await fetch(`${SERVER_URL}/get_used_data?item_url=${record.item_url}`);\n      if (result.ok) {\n        const result2: UsedItemInfo = await result.json();\n        setUsedItemInfo(result2);\n      } else {\n        setUsedItemInfo({\n          shop_name: '不明',\n          rank: '不明',\n          fancy_box_flg: false,\n          item_status: '不明',\n          accessories: '不明',\n          stockout: '不明',\n          compensation: '不明'\n        });\n      }\n    };\n    if (showStockFlg) {\n      refresh();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [showStockFlg]);\n\n  const status_list = usedItemInfo.item_status.includes('、')\n    ? usedItemInfo.item_status.split('、').filter(r => r !== '')\n    : [usedItemInfo.item_status];\n\n  const accessories_list = usedItemInfo.accessories.includes('□')\n    ? usedItemInfo.accessories.split('□').filter(r => r !== '')\n    : [usedItemInfo.accessories];\n\n  const stockout_list = usedItemInfo.stockout.includes('□')\n    ? usedItemInfo.stockout.split('□').filter(r => r !== '')\n    : [usedItemInfo.stockout];\n\n  return (<>\n    <tr>\n      <td className=\"align-middle\"><a href={record.item_url} target=\"_blank\" rel=\"noopener noreferrer\">{record.name}</a></td>\n      <td className=\"align-middle\">{record.price}</td>\n      <td className=\"align-middle\">{record.shop_name}</td>\n      <td className=\"align-middle\">{record.rank}</td>\n      <td className=\"align-middle\"><img src={record.image_url} width={THUMBNAIL_SIZE} height={THUMBNAIL_SIZE} alt={record.name} /></td>\n      <td className=\"align-middle text-center\"><button className=\"btn btn-primary\"\n        onClick={() => setShowStockFlg(!showStockFlg)}>状態</button></td>\n    </tr>\n    {showStockFlg\n      ? <tr>\n        <td className=\"align-middle\" colSpan={4}>\n          <ul className=\"my-0\">\n            <li><strong>店名：</strong>{usedItemInfo.shop_name}</li>\n            <li><strong>ランク：</strong>{usedItemInfo.rank}</li>\n            <li><strong>外箱：</strong>{usedItemInfo.fancy_box_flg ? '有り' : '無し'}</li>\n            <li><strong>商品状態：</strong>{\n              status_list.length === 1\n                ? status_list[0]\n                : <ul className=\"my-0\">\n                  {status_list.map(r => <li key={r}>{r}</li>)}\n                </ul>\n            }</li>\n            <li><strong>付属内容：</strong>{\n              accessories_list.length === 1\n                ? accessories_list[0]\n                : <ul className=\"my-0\">\n                  {accessories_list.map(r => <li key={r}>{r}</li>)}\n                </ul>\n            }</li>\n            <li><strong>欠品内容：</strong>{\n              stockout_list.length === 1\n                ? stockout_list[0]\n                : <ul className=\"my-0\">\n                  {stockout_list.map(r => <li key={r}>{r}</li>)}\n                </ul>\n            }</li>\n            <li><strong>補償：</strong>{usedItemInfo.compensation}</li>\n          </ul>\n        </td>\n      </tr>\n      : <></>}\n  </>);\n};\n\nconst ResultUsedView: React.FC<{\n  usedItemList: UsedItem[]\n}> = ({ usedItemList }) => {\n  const [nameFilter, setNameFilter] = useState('');\n  const [sortKey, setSortKey] = useState('');\n  const [sortDescFlg, setSortDescFlg] = useState(false);\n\n  const onChangeMameFilter = (e: FormEvent<HTMLInputElement>) => {\n    setNameFilter(e.currentTarget.value);\n  };\n\n  const createItemList = () => {\n    let temp = usedItemList\n      .filter(record => nameFilter !== '' ? record.name.includes(nameFilter) : true);\n    switch (sortKey) {\n      case '商品名':\n        temp = temp.sort((a, b) => a.name > b.name ? 1 : a.name < b.name ? -1 : 0);\n        break;\n      case '価格':\n        temp = temp.sort((a, b) => a.price > b.price ? 1 : a.price < b.price ? -1 : 0);\n        break;\n      case '販売店':\n        temp = temp.sort((a, b) => a.shop_name > b.shop_name ? 1 : a.shop_name < b.shop_name ? -1 : 0);\n        break;\n      case 'ランク':\n        temp = temp.sort((a, b) => a.rank > b.rank ? 1 : a.rank < b.rank ? -1 : 0);\n        break;\n    }\n    if (sortDescFlg) {\n      temp = temp.reverse();\n    }\n    return temp;\n  };\n\n  const itemLabel = (label: string) => {\n    if (sortKey !== label) {\n      return label;\n    }\n    return label + (sortDescFlg ? '↓' : '↑');\n  }\n\n  const onClickItemLabel = (label: string) => {\n    if (sortKey !== label) {\n      setSortKey(label);\n      setSortDescFlg(false);\n    } else {\n      if (!sortDescFlg) {\n        setSortDescFlg(true);\n      } else {\n        setSortKey('');\n      }\n    }\n  };\n\n  return (<>\n    <div className=\"row mt-3 justify-content-center\">\n      <div className=\"col-12 col-md-10\">\n        <form>\n          <div className=\"form-group d-flex mt-0\">\n            <label className=\"text-nowrap mr-3 mt-2\" htmlFor=\"filterWord\">名前フィルタ</label>\n            <input type=\"text\" id=\"filterWord\" className=\"form-control\"\n              placeholder=\"入力したワードを含むもののみ表示\"\n              value={nameFilter} onChange={onChangeMameFilter} />\n          </div>\n        </form>\n      </div>\n    </div>\n    <div className=\"row justify-content-center\">\n      <div className=\"col-12 col-md-10\">\n        <table className=\"border table table-striped table-nowrap table-bordered table-sm\">\n          <thead>\n            <tr>\n              <th className=\"text-nowrap\" onClick={() => onClickItemLabel('商品名')}>{itemLabel('商品名')}</th>\n              <th className=\"text-nowrap\" onClick={() => onClickItemLabel('価格')}>{itemLabel('価格')}</th>\n              <th className=\"text-nowrap\" onClick={() => onClickItemLabel('販売店')}>{itemLabel('販売店')}</th>\n              <th className=\"text-nowrap\" onClick={() => onClickItemLabel('ランク')}>{itemLabel('ランク')}</th>\n              <th className=\"text-nowrap\">画像</th>\n              <th className=\"text-nowrap\">詳細</th>\n            </tr>\n          </thead>\n          <tbody>\n            {createItemList().map((record, index) => {\n              return <UsedItemRecord record={record} key={index} />;\n            })}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  </>);\n}\n\nconst ResultView: React.FC<{\n  showMode: ShowMode,\n  newItemList: NewItem[],\n  usedItemList: UsedItem[]\n}> = ({ showMode, newItemList, usedItemList }) => {\n  switch (showMode) {\n    case 'New':\n      return (<ResultNewView newItemList={newItemList} />);\n    case 'Used':\n      return (<ResultUsedView usedItemList={usedItemList} />);\n    default:\n      return <></>;\n  }\n};\n\nconst App: React.FC = () => {\n  const [searchWord, setSearchWord] = useState('');\n  const [newItemList, setNewItemList] = useState<NewItem[]>([]);\n  const [usedItemList, setUsedItemList] = useState<UsedItem[]>([]);\n  const [showMode, setShowMode] = useState<ShowMode>('New');\n  const [loadIngFlg, setLoadingFlg] = useState(false);\n\n  const onChangeSearchWord = (e: FormEvent<HTMLInputElement>) => {\n    setSearchWord(e.currentTarget.value);\n  };\n\n  const onChangeShowMode = (e: FormEvent<HTMLSelectElement>) => {\n    if (e.currentTarget.value === 'New') {\n      setShowMode('New');\n      setNewItemList([]);\n    } else {\n      setShowMode('Used');\n      setUsedItemList([]);\n    }\n  }\n\n  useEffect(() => {\n    if (loadIngFlg) {\n      if (showMode === 'New') {\n        fetch(`${SERVER_URL}/search_new?item_name=${searchWord}&remove_keyword`).then(res => res.json()).then((body: NewItem[]) => {\n          setNewItemList(body);\n          setShowMode('New');\n          setLoadingFlg(false);\n        });\n      } else {\n        fetch(`${SERVER_URL}/search_used?item_name=${searchWord}&remove_keyword`).then(res => res.json()).then((body: UsedItem[]) => {\n          setUsedItemList(body);\n          setShowMode('Used');\n          setLoadingFlg(false);\n        });\n      }\n    }\n  }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    , [loadIngFlg]);\n\n  const isDisabledSearchButton = () => searchWord === '' || loadIngFlg;\n\n  const onClickSearch = () => {\n    setLoadingFlg(true);\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"row mt-3 justify-content-center\">\n        <div className=\"col-12 col-md-10 text-center\">\n          <h1>eイヤ検索アプリ</h1>\n        </div>\n      </div>\n      <div className=\"row mt-3 justify-content-center\">\n        <div className=\"col-12 col-md-10\">\n          <form className=\"border p-3\">\n            <div className=\"form-group\">\n              <label htmlFor=\"searchWord\">検索ワード</label>\n              <input type=\"text\" className=\"form-control\" id=\"searchWord\" placeholder=\"検索ワード\"\n                value={searchWord} onChange={onChangeSearchWord} readOnly={loadIngFlg} />\n            </div>\n            <div className=\"form-group d-flex\">\n              <label className=\"text-nowrap mt-2\" htmlFor=\"showMode\">商品状態</label>\n              <select className=\"form-control ml-3\" id=\"showMode\" value={showMode} onChange={onChangeShowMode}\n                disabled={loadIngFlg}>\n                <option value='New'>新品</option>\n                <option value='Used'>中古</option>\n              </select>\n              <button type=\"button\" className=\"btn btn-primary text-nowrap ml-3\"\n                onClick={onClickSearch} disabled={isDisabledSearchButton()}>検索</button>\n            </div>\n          </form>\n        </div>\n      </div>\n      <div className=\"row mt-3 justify-content-center\">\n        <div className=\"col-12 col-md-10\">\n          <div className={`spinner-border text-primary ${loadIngFlg ? '' : 'd-none'}`} role=\"status\">\n            <span className=\"sr-only\">Loading...</span>\n          </div>\n        </div>\n      </div>\n      <ResultView showMode={showMode} newItemList={newItemList} usedItemList={usedItemList} />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'App';\nimport * as serviceWorker from 'serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}