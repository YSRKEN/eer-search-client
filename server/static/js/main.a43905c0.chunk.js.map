{"version":3,"sources":["App.tsx","serviceWorker.ts","index.tsx"],"names":["SERVER_URL","window","location","port","protocol","host","NewItemRecord","record","useState","showStockFlg","setShowStockFlg","stockText","setStockText","sampleText","setSampleText","useEffect","a","fetch","item_url","result","ok","json","result2","stock","length","map","r","name","info","join","sample","refresh","className","href","target","rel","price","src","image_url","width","height","alt","onClick","colSpan","ResultNewView","newItemList","nameFilter","setNameFilter","sortKey","setSortKey","sortDescFlg","setSortDescFlg","htmlFor","type","id","placeholder","value","onChange","e","currentTarget","temp","filter","includes","sort","b","reverse","createItemList","index","key","UsedItemRecord","shop_name","rank","fancy_box_flg","item_status","accessories","stockout","compensation","usedItemInfo","setUsedItemInfo","status_list","split","accessories_list","stockout_list","ResultUsedView","usedItemList","ResultView","showMode","App","searchWord","setSearchWord","setNewItemList","setUsedItemList","setShowMode","loadIngFlg","setLoadingFlg","then","res","body","readOnly","disabled","role","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a43905c0.chunk.js","sourcesContent":["import React, { useState, FormEvent, useEffect } from 'react';\r\n\r\nconst SERVER_URL = window.location.port === '3000'\r\n  ? 'http://localhost:5000'\r\n  : window.location.protocol + '//' + window.location.host;\r\n\r\nconst THUMBNAIL_SIZE = 60;\r\n\r\ninterface NewItem {\r\n  price: number;\r\n  name: string;\r\n  item_url: string;\r\n  image_url: string;\r\n}\r\n\r\ninterface UsedItem {\r\n  price: number;\r\n  name: string;\r\n  item_url: string;\r\n  image_url: string;\r\n}\r\n\r\ninterface UsedItemInfo {\r\n  shop_name: string,      // 置いてあるお店の名前\r\n  rank: string,           // ランク(未開封品～ジャンク)\r\n  fancy_box_flg: boolean, // 外箱の有無\r\n  item_status: string,    // 商品状態\r\n  accessories: string,    // 付属内容\r\n  stockout: string,       // 欠品内容\r\n  compensation: string    // 補償\r\n}\r\n\r\ntype ShowMode = 'New' | 'Used';\r\n\r\nconst NewItemRecord: React.FC<{ record: NewItem }> = ({ record }) => {\r\n  const [showStockFlg, setShowStockFlg] = useState(false);\r\n  const [stockText, setStockText] = useState('在庫：取得中...');\r\n  const [sampleText, setSampleText] = useState('試聴機：取得中...');\r\n\r\n  useEffect(() => {\r\n    const refresh = async () => {\r\n      const result = await fetch(`${SERVER_URL}/get_stock_data?item_url=${record.item_url}`);\r\n      if (result.ok) {\r\n        const result2: {\r\n          stock: { name: string, info: string }[],\r\n          sample: string[]\r\n        } = await result.json();\r\n        if (result2.stock.length === 0) {\r\n          setStockText('在庫：なし');\r\n        } else {\r\n          setStockText('在庫：' + result2.stock.map(r => `${r.name}(${r.info})`).join('、'));\r\n        }\r\n        if (result2.sample.length === 0) {\r\n          setSampleText('試聴機：なし');\r\n        } else {\r\n          setSampleText('試聴機：' + result2.sample.join('、'));\r\n        }\r\n      } else {\r\n        setStockText('在庫：不明');\r\n        setSampleText('試聴機：不明');\r\n      }\r\n    };\r\n    if (showStockFlg) {\r\n      refresh();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [showStockFlg]);\r\n\r\n  return (<>\r\n    <tr>\r\n      <td className=\"align-middle\"><a href={record.item_url} target=\"_blank\" rel=\"noopener noreferrer\">{record.name}</a></td>\r\n      <td className=\"align-middle\">{record.price}</td>\r\n      <td className=\"align-middle\"><img src={record.image_url} width={THUMBNAIL_SIZE} height={THUMBNAIL_SIZE} alt={record.name} /></td>\r\n      <td className=\"align-middle text-center\"><button className=\"btn btn-primary\"\r\n        onClick={() => setShowStockFlg(!showStockFlg)}>在庫</button></td>\r\n    </tr>\r\n    {showStockFlg\r\n      ? <tr>\r\n        <td className=\"align-middle\" colSpan={4}>\r\n          <ul className=\"my-0\">\r\n            <li>{stockText}</li>\r\n            <li>{sampleText}</li>\r\n          </ul>\r\n        </td>\r\n      </tr>\r\n      : <></>}\r\n  </>);\r\n};\r\n\r\nconst ResultNewView: React.FC<{\r\n  newItemList: NewItem[]\r\n}> = ({ newItemList }) => {\r\n  const [nameFilter, setNameFilter] = useState('');\r\n  const [sortKey, setSortKey] = useState('');\r\n  const [sortDescFlg, setSortDescFlg] = useState(false);\r\n\r\n  const onChangeMameFilter = (e: FormEvent<HTMLInputElement>) => {\r\n    setNameFilter(e.currentTarget.value);\r\n  };\r\n\r\n  const createItemList = () => {\r\n    let temp = newItemList\r\n      .filter(record => nameFilter !== '' ? record.name.includes(nameFilter) : true);\r\n    switch (sortKey) {\r\n      case '商品名':\r\n        temp = temp.sort((a, b) => a.name > b.name ? 1 : a.name < b.name ? -1 : 0);\r\n        break;\r\n      case '価格':\r\n        temp = temp.sort((a, b) => a.price > b.price ? 1 : a.price < b.price ? -1 : 0);\r\n        break;\r\n    }\r\n    if (sortDescFlg) {\r\n      temp = temp.reverse();\r\n    }\r\n    return temp;\r\n  };\r\n\r\n  const itemNameLabel = () => {\r\n    if (sortKey !== '商品名') {\r\n      return '商品名';\r\n    }\r\n    return '商品名' + (sortDescFlg ? '↓' : '↑');\r\n  }\r\n\r\n  const itemPriceLabel = () => {\r\n    if (sortKey !== '価格') {\r\n      return '価格';\r\n    }\r\n    return '価格' + (sortDescFlg ? '↓' : '↑');\r\n  }\r\n\r\n  const onClickItemNameLabel = () => {\r\n    if (sortKey !== '商品名') {\r\n      setSortKey('商品名');\r\n      setSortDescFlg(false);\r\n    } else {\r\n      if (!sortDescFlg) {\r\n        setSortDescFlg(true);\r\n      } else {\r\n        setSortKey('');\r\n      }\r\n    }\r\n  };\r\n\r\n  const onClickItemPriceLabel = () => {\r\n    if (sortKey !== '価格') {\r\n      setSortKey('価格');\r\n      setSortDescFlg(false);\r\n    } else {\r\n      if (!sortDescFlg) {\r\n        setSortDescFlg(true);\r\n      } else {\r\n        setSortKey('');\r\n      }\r\n    }\r\n  };\r\n\r\n  return (<>\r\n    <div className=\"row mt-3 justify-content-center\">\r\n      <div className=\"col-12 col-md-8\">\r\n        <form>\r\n          <div className=\"form-group d-flex my-0\">\r\n            <label className=\"text-nowrap mr-3 mt-2\" htmlFor=\"filterWord\">名前フィルタ</label>\r\n            <input type=\"text\" id=\"filterWord\" className=\"form-control\"\r\n              placeholder=\"入力したワードを含むもののみ表示\"\r\n              value={nameFilter} onChange={onChangeMameFilter} />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n    <div className=\"row mt-3 justify-content-center\">\r\n      <div className=\"col-12 col-md-8\">\r\n        <table className=\"border table table-striped table-nowrap table-bordered table-sm\">\r\n          <thead>\r\n            <tr>\r\n              <th className=\"text-nowrap\" onClick={onClickItemNameLabel}>{itemNameLabel()}</th>\r\n              <th className=\"text-nowrap\" onClick={onClickItemPriceLabel}>{itemPriceLabel()}</th>\r\n              <th className=\"text-nowrap\">画像</th>\r\n              <th className=\"text-nowrap\">詳細</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {createItemList().map((record, index) => {\r\n              return <NewItemRecord record={record} key={index} />;\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  </>);\r\n}\r\n\r\nconst UsedItemRecord: React.FC<{ record: UsedItem }> = ({ record }) => {\r\n  const [showStockFlg, setShowStockFlg] = useState(false);\r\n  const [usedItemInfo, setUsedItemInfo] = useState<UsedItemInfo>({\r\n    shop_name: '取得中...',\r\n    rank: '取得中...',\r\n    fancy_box_flg: false,\r\n    item_status: '取得中...',\r\n    accessories: '取得中...',\r\n    stockout: '取得中...',\r\n    compensation: '取得中...'\r\n  });\r\n\r\n  useEffect(() => {\r\n    const refresh = async () => {\r\n      const result = await fetch(`${SERVER_URL}/get_used_data?item_url=${record.item_url}`);\r\n      if (result.ok) {\r\n        const result2: UsedItemInfo = await result.json();\r\n        setUsedItemInfo(result2);\r\n      } else {\r\n        setUsedItemInfo({\r\n          shop_name: '不明',\r\n          rank: '不明',\r\n          fancy_box_flg: false,\r\n          item_status: '不明',\r\n          accessories: '不明',\r\n          stockout: '不明',\r\n          compensation: '不明'\r\n        });\r\n      }\r\n    };\r\n    if (showStockFlg) {\r\n      refresh();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [showStockFlg]);\r\n\r\n  const status_list = usedItemInfo.item_status.includes('、')\r\n    ? usedItemInfo.item_status.split('、').filter(r => r !== '')\r\n    : [usedItemInfo.item_status];\r\n\r\n  const accessories_list = usedItemInfo.accessories.includes('□')\r\n    ? usedItemInfo.accessories.split('□').filter(r => r !== '')\r\n    : [usedItemInfo.accessories];\r\n\r\n  const stockout_list = usedItemInfo.stockout.includes('□')\r\n    ? usedItemInfo.stockout.split('□').filter(r => r !== '')\r\n    : [usedItemInfo.stockout];\r\n\r\n  return (<>\r\n    <tr>\r\n      <td className=\"align-middle\"><a href={record.item_url} target=\"_blank\" rel=\"noopener noreferrer\">{record.name}</a></td>\r\n      <td className=\"align-middle\">{record.price}</td>\r\n      <td className=\"align-middle\"><img src={record.image_url} width={THUMBNAIL_SIZE} height={THUMBNAIL_SIZE} alt={record.name} /></td>\r\n      <td className=\"align-middle text-center\"><button className=\"btn btn-primary\"\r\n        onClick={() => setShowStockFlg(!showStockFlg)}>在庫</button></td>\r\n    </tr>\r\n    {showStockFlg\r\n      ? <tr>\r\n        <td className=\"align-middle\" colSpan={4}>\r\n          <ul className=\"my-0\">\r\n            <li><strong>店名：</strong>{usedItemInfo.shop_name}</li>\r\n            <li><strong>ランク：</strong>{usedItemInfo.rank}</li>\r\n            <li><strong>外箱：</strong>{usedItemInfo.fancy_box_flg ? '有り' : '無し'}</li>\r\n            <li><strong>商品状態：</strong>{\r\n              status_list.length === 1\r\n                ? status_list[0]\r\n                : <ul className=\"my-0\">\r\n                  {status_list.map(r => <li key={r}>{r}</li>)}\r\n                </ul>\r\n            }</li>\r\n            <li><strong>付属内容：</strong>{\r\n              accessories_list.length === 1\r\n                ? accessories_list[0]\r\n                : <ul className=\"my-0\">\r\n                  {accessories_list.map(r => <li key={r}>{r}</li>)}\r\n                </ul>\r\n            }</li>\r\n            <li><strong>欠品内容：</strong>{\r\n              stockout_list.length === 1\r\n                ? stockout_list[0]\r\n                : <ul className=\"my-0\">\r\n                  {stockout_list.map(r => <li key={r}>{r}</li>)}\r\n                </ul>\r\n            }</li>\r\n            <li><strong>補償：</strong>{usedItemInfo.compensation}</li>\r\n          </ul>\r\n        </td>\r\n      </tr>\r\n      : <></>}\r\n  </>);\r\n};\r\n\r\nconst ResultUsedView: React.FC<{\r\n  usedItemList: UsedItem[]\r\n}> = ({ usedItemList }) => {\r\n  const [nameFilter, setNameFilter] = useState('');\r\n  const [sortKey, setSortKey] = useState('');\r\n  const [sortDescFlg, setSortDescFlg] = useState(false);\r\n\r\n  const onChangeMameFilter = (e: FormEvent<HTMLInputElement>) => {\r\n    setNameFilter(e.currentTarget.value);\r\n  };\r\n\r\n  const createItemList = () => {\r\n    let temp = usedItemList\r\n      .filter(record => nameFilter !== '' ? record.name.includes(nameFilter) : true);\r\n    switch (sortKey) {\r\n      case '商品名':\r\n        temp = temp.sort((a, b) => a.name > b.name ? 1 : a.name < b.name ? -1 : 0);\r\n        break;\r\n      case '価格':\r\n        temp = temp.sort((a, b) => a.price > b.price ? 1 : a.price < b.price ? -1 : 0);\r\n        break;\r\n    }\r\n    if (sortDescFlg) {\r\n      temp = temp.reverse();\r\n    }\r\n    return temp;\r\n  };\r\n\r\n  const itemNameLabel = () => {\r\n    if (sortKey !== '商品名') {\r\n      return '商品名';\r\n    }\r\n    return '商品名' + (sortDescFlg ? '↓' : '↑');\r\n  }\r\n\r\n  const itemPriceLabel = () => {\r\n    if (sortKey !== '価格') {\r\n      return '価格';\r\n    }\r\n    return '価格' + (sortDescFlg ? '↓' : '↑');\r\n  }\r\n\r\n  const onClickItemNameLabel = () => {\r\n    if (sortKey !== '商品名') {\r\n      setSortKey('商品名');\r\n      setSortDescFlg(false);\r\n    } else {\r\n      if (!sortDescFlg) {\r\n        setSortDescFlg(true);\r\n      } else {\r\n        setSortKey('');\r\n      }\r\n    }\r\n  };\r\n\r\n  const onClickItemPriceLabel = () => {\r\n    if (sortKey !== '価格') {\r\n      setSortKey('価格');\r\n      setSortDescFlg(false);\r\n    } else {\r\n      if (!sortDescFlg) {\r\n        setSortDescFlg(true);\r\n      } else {\r\n        setSortKey('');\r\n      }\r\n    }\r\n  };\r\n\r\n  return (<>\r\n    <div className=\"row mt-3 justify-content-center\">\r\n      <div className=\"col-12 col-md-8\">\r\n        <form>\r\n          <div className=\"form-group d-flex mt-0\">\r\n            <label className=\"text-nowrap mr-3 mt-2\" htmlFor=\"filterWord\">名前フィルタ</label>\r\n            <input type=\"text\" id=\"filterWord\" className=\"form-control\"\r\n              placeholder=\"入力したワードを含むもののみ表示\"\r\n              value={nameFilter} onChange={onChangeMameFilter} />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n    <div className=\"row justify-content-center\">\r\n      <div className=\"col-12 col-md-8\">\r\n        <table className=\"border table table-striped table-nowrap table-bordered table-sm\">\r\n          <thead>\r\n            <tr>\r\n              <th className=\"text-nowrap\" onClick={onClickItemNameLabel}>{itemNameLabel()}</th>\r\n              <th className=\"text-nowrap\" onClick={onClickItemPriceLabel}>{itemPriceLabel()}</th>\r\n              <th className=\"text-nowrap\">画像</th>\r\n              <th className=\"text-nowrap\">詳細</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {createItemList().map((record, index) => {\r\n              return <UsedItemRecord record={record} key={index} />;\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  </>);\r\n}\r\n\r\nconst ResultView: React.FC<{\r\n  showMode: ShowMode,\r\n  newItemList: NewItem[],\r\n  usedItemList: UsedItem[]\r\n}> = ({ showMode, newItemList, usedItemList }) => {\r\n  switch (showMode) {\r\n    case 'New':\r\n      return (<ResultNewView newItemList={newItemList} />);\r\n    case 'Used':\r\n      return (<ResultUsedView usedItemList={usedItemList} />);\r\n    default:\r\n      return <></>;\r\n  }\r\n};\r\n\r\nconst App: React.FC = () => {\r\n  const [searchWord, setSearchWord] = useState('');\r\n  const [newItemList, setNewItemList] = useState<NewItem[]>([]);\r\n  const [usedItemList, setUsedItemList] = useState<UsedItem[]>([]);\r\n  const [showMode, setShowMode] = useState<ShowMode>('New');\r\n  const [loadIngFlg, setLoadingFlg] = useState(false);\r\n\r\n  const onChangeSearchWord = (e: FormEvent<HTMLInputElement>) => {\r\n    setSearchWord(e.currentTarget.value);\r\n  };\r\n\r\n  const onChangeShowMode = (e: FormEvent<HTMLSelectElement>) => {\r\n    if (e.currentTarget.value === 'New') {\r\n      setShowMode('New');\r\n      setNewItemList([]);\r\n    } else {\r\n      setShowMode('Used');\r\n      setUsedItemList([]);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (loadIngFlg) {\r\n      if (showMode === 'New') {\r\n        fetch(`${SERVER_URL}/search_new?item_name=${searchWord}&remove_keyword`).then(res => res.json()).then((body: NewItem[]) => {\r\n          setNewItemList(body);\r\n          setShowMode('New');\r\n          setLoadingFlg(false);\r\n        });\r\n      } else {\r\n        fetch(`${SERVER_URL}/search_used?item_name=${searchWord}&remove_keyword`).then(res => res.json()).then((body: UsedItem[]) => {\r\n          setUsedItemList(body);\r\n          setShowMode('Used');\r\n          setLoadingFlg(false);\r\n        });\r\n      }\r\n    }\r\n  }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    , [loadIngFlg]);\r\n\r\n  const isDisabledSearchButton = () => searchWord === '' || loadIngFlg;\r\n\r\n  const onClickSearch = () => {\r\n    setLoadingFlg(true);\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row mt-3 justify-content-center\">\r\n        <div className=\"col-12 col-md-8 text-center\">\r\n          <h1>eイヤ検索アプリ</h1>\r\n        </div>\r\n      </div>\r\n      <div className=\"row mt-3 justify-content-center\">\r\n        <div className=\"col-12 col-md-8\">\r\n          <form className=\"border p-3\">\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"searchWord\">検索ワード</label>\r\n              <input type=\"text\" className=\"form-control\" id=\"searchWord\" placeholder=\"検索ワード\"\r\n                value={searchWord} onChange={onChangeSearchWord} readOnly={loadIngFlg} />\r\n            </div>\r\n            <div className=\"form-group d-flex\">\r\n              <label className=\"text-nowrap mt-2\" htmlFor=\"showMode\">商品状態</label>\r\n              <select className=\"form-control ml-3\" id=\"showMode\" value={showMode} onChange={onChangeShowMode}\r\n                disabled={loadIngFlg}>\r\n                <option value='New'>新品</option>\r\n                <option value='Used'>中古</option>\r\n              </select>\r\n              <button type=\"button\" className=\"btn btn-primary text-nowrap ml-3\"\r\n                onClick={onClickSearch} disabled={isDisabledSearchButton()}>検索</button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n      <div className=\"row mt-3 justify-content-center\">\r\n        <div className=\"col-12 col-md-8\">\r\n          <div className={`spinner-border text-primary ${loadIngFlg ? '' : 'd-none'}`} role=\"status\">\r\n            <span className=\"sr-only\">Loading...</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <ResultView showMode={showMode} newItemList={newItemList} usedItemList={usedItemList} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'App';\nimport * as serviceWorker from 'serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}